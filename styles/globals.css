@tailwind base;
@tailwind components;
@tailwind utilities;

/* League of Legends Inspired Styles */
@layer base {
  * {
    cursor: url('/Hand.cur'), auto !important;
  }
  
  body {
    @apply bg-black text-white;
    cursor: url('/Hand.cur'), auto;
  }
}

@layer components {
  .gaming-button {
    @apply relative px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold rounded-lg transform transition-all duration-300 hover:scale-105 hover:shadow-2xl hover:shadow-blue-500/25 active:scale-95;
  }

  .gaming-button::before {
    content: "";
    @apply absolute inset-0 bg-gradient-to-r from-blue-400 to-purple-400 rounded-lg opacity-0 transition-opacity duration-300;
  }

  .gaming-button:hover::before {
    @apply opacity-20;
  }

  .card-background {
    @apply bg-slate-800 bg-opacity-30 backdrop-blur-sm border border-slate-700 border-opacity-50;
  }

  .background-dark {
    @apply bg-slate-900 bg-opacity-50;
  }

  .primary-purple {
    @apply text-purple-400;
  }

  .accent-gold {
    @apply text-yellow-400;
  }

  .text-secondary {
    @apply text-gray-400;
  }

  .responsive-heading-3 {
    @apply text-2xl sm:text-3xl font-bold;
  }

  .responsive-grid-2 {
    @apply grid grid-cols-1 sm:grid-cols-2 gap-4;
  }

  .responsive-caption {
    @apply text-sm;
  }

  /* Custom cursor for interactive elements */
  button, a, input, select, textarea, [role="button"], .clickable {
    cursor: url('/Hand.cur'), pointer !important;
  }

  /* Ensure cursor works on hover states */
  button:hover, a:hover, input:hover, select:hover, textarea:hover, [role="button"]:hover, .clickable:hover {
    cursor: url('/Hand.cur'), pointer !important;
  }

  /* Handle specific cursor states */
  input[type="text"]:focus, input[type="email"]:focus, input[type="password"]:focus, textarea:focus {
    cursor: url('/Hand.cur'), text !important;
  }

  /* Disabled elements */
  button:disabled, input:disabled, select:disabled, textarea:disabled {
    cursor: url('/Hand.cur'), not-allowed !important;
  }

  /* Loading states */
  .loading, [aria-busy="true"] {
    cursor: url('/Hand.cur'), wait !important;
  }
}

@layer utilities {
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .animate-glow {
    animation: glow 2s ease-in-out infinite alternate;
  }

  /* Custom cursor utilities */
  .cursor-hand {
    cursor: url('/Hand.cur'), auto !important;
  }

  .cursor-hand-pointer {
    cursor: url('/Hand.cur'), pointer !important;
  }
}

@keyframes float {
  0%,
  100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-20px);
  }
}

@keyframes glow {
  from {
    box-shadow: 0 0 20px rgba(59, 130, 246, 0.5);
  }
  to {
    box-shadow: 0 0 30px rgba(147, 51, 234, 0.8);
  }
}
